<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs title="persistent data">
        <Require feature="opensocial-0.8"/>
    </ModulePrefs>
    <Content type="html">
    <![CDATA[
        <div id="input">
            <FORM>
                var1: <INPUT TYPE="text" name="var1"/><br/>
                var2-1: <INPUT TYPE="text" name="var2_1"/><br/>
                <INPUT TYPE="button" value="save" onclick="update( this.form )"/><br/>
                <INPUT TYPE="button" value="clear" onclick="clear_pd( this.form )"/>
            </FORM>
        </div>
        <h3>fetched persistent data:</h3>
        <div id="output"></div>
        <script type="text/javascript">
            var out = document.getElementById( 'output' );
            var cols = [ 'var1', 'var2' ];
            function update( form ) {
                out.innerHTML = 'updating...';
                var var1 = form.var1.value || '';
                var var2_1 = form.var2_1.value || '';
                // json object
                var obj  = { x:"あいう", y:var2_1 };
                var var2 = gadgets.json.stringify( obj );
                // request update
                var req = opensocial.newDataRequest();
                req.add( req.newUpdatePersonAppDataRequest( opensocial.IdSpec.PersonId.VIEWER, "var1", var1 ) );
                req.add( req.newUpdatePersonAppDataRequest( opensocial.IdSpec.PersonId.VIEWER, "var2", var2 ) );
                req.send( update_callback );
            };
            function update_callback( res ) {
                if( res.hadError() ){
                    out.innerHTML = res.getErrorMessage();
                    return;
                }
                out.innerHTML = '<b>update success</b><br/>'; 
                fetch();
            };
            function fetch() {
                var req  = opensocial.newDataRequest();
                var p = {};
                p[ opensocial.IdSpec.Field.USER_ID ] = opensocial.IdSpec.PersonId.VIEWER;
                var ispc = opensocial.newIdSpec( p );
                req.add( req.newFetchPersonRequest( opensocial.IdSpec.PersonId.VIEWER ), "viewer" );
                req.add( req.newFetchPersonAppDataRequest( ispc, cols ), "viewer_data" );
                req.send( fetch_callback );
            };
            function fetch_callback( res ) {
                var vwd = res.get( "viewer_data" );
                var vw  = res.get( "viewer" );
                me = vw.getData();
                if( res.hadError() ){
                    out.innerHTML = res.getErrorMessage();
                    return;
                }
                var data = ( vwd.getData() )[ me.getId() ];
                if( !data ){
                    out.innerHTML = 'persistent data is empty.';
                    return;
                }
                var var1 = data.var1 || 'blank';
                out.innerHTML = '<ul>'
                    + '<li>' + var1 + '</li>'
                    + '<li>' + 'see console.log for var2 dump' + '</li>'
                    + '</ul>';
                // json parse
                var obj = gadgets.json.parse( gadgets.util.unescapeString( data.var2 ) || '{}' );
                console.log( obj );
            };
            function clear_pd() {
                var req = opensocial.newDataRequest();
                req.add( req.newRemovePersonAppDataRequest( opensocial.IdSpec.PersonId.VIEWER, cols ), "clear_data" );
                req.send( clear_callback );
            };
            function clear_callback( res ) {
                if( res.hadError() ){
                    out.innerHTML = res.getErrorMessage();
                    return;
                }
                out.innerHTML = '<b>clear success</b><br/>'; 
                fetch();
            };
            gadgets.util.registerOnLoadHandler( fetch );
        </script>
    ]]>
    </Content>
</Module>
